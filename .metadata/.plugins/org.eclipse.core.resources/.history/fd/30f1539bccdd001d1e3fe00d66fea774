package com.shopcart.backend.Order;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import com.shopcart.backend.repository.OrderRepository;
import com.shopcart.backend.service.OrderService;
import com.shopcart.backend.model.Orders;
import static java.util.Arrays.asList;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.List;
@ExtendWith(MockitoExtension.class)
@ExtendWith(SpringExtension.class)
public class OrderTests {

	@MockBean
	OrderRepository orderRepository;
	
	@InjectMocks
	OrderService orderService;
	
	@Test
	public void getOrderedItems() {
		Orders orders = new Orders();
		orders.setCartitemId((long)2);
		orders.setDate("18-4-2023");
		orders.setTime("15:01");
		orders.setQuantity((long) 3);
		orders.setProductId((long)14);
		orders.setOrderstatus("confirm");
		orders.setUserId((long)1);
		Mockito.when(orderRepository.findAllByOrderByOrderIdAsc()).thenReturn(asList(orders));
		List<Orders> orders2 = orderService.getOrderedItems();
		assertEquals(orders,orders2.get(0));
	}
	
	@Test
	public void getOrderedItemsByTime() {
		Orders orders = new Orders();
		orders.setCartitemId((long)2);
		orders.setDate("18-4-2023");
		orders.setTime("15:01");
		orders.setQuantity((long) 3);
		orders.setProductId((long)14);
		orders.setOrderstatus("confirm");
		orders.setUserId((long)1);
		Mockito.when(orderRepository.findAllByOrderByTimeDesc()).thenReturn(asList(orders));
		List<Orders> orders2 = orderService.getOrderedItemsByTime((long)1);
		assertEquals(orders,orders2.get(0));
	}
}
